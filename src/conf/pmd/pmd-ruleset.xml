<?xml version="1.0"?>
<!-- #%L
  Genome Damage and Stability Centre Examples
  %%
  Copyright (C) 2018 - 2020 Alex Herbert
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  You should have received a copy of the GNU General Public
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/gpl-3.0.html>.
  #L% -->

<ruleset name="customized" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>
    This ruleset checks the code for discouraged programming constructs.
  </description>

  <rule ref="category/java/bestpractices.xml">
    <exclude name="UseVarargs" />
    <!-- Allow builders to construct classes using private constructors -->
    <exclude name="AccessorClassGeneration" />
  </rule>
  <rule ref="category/java/codestyle.xml/FieldNamingConventions">
    <properties>
      <property name="exclusions" value="serialVersionUID|logger" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LocalVariableNamingConventions">
    <properties>
      <!-- Allow underscores using letters for add, subtract, multiply, divide.  -->
      <property name="finalVarPattern" value="[a-z][a-zA-Z0-9]*(_[asmd]_[a-zA-Z0-9]*)*" />
    </properties>
  </rule>
  <!-- This allows the commonly used construct for decrementing in a for loop. -->
  <rule ref="category/java/errorprone.xml/AssignmentInOperand">
    <properties>
      <property name="allowIncrementDecrement" value="true" />
    </properties>
  </rule>
  <!-- Allow 1 to be used in conditions as a magic number. -->
  <rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition">
    <properties>
      <property name="ignoreMagicNumbers" value="-1,0,1" />
    </properties>
  </rule>
  <!-- This is to allow private fields to be undocumented. There are specific visibility checks done using Checkstyle. 'private'
    is OK but otherwise fields should be commented. -->
  <rule ref="category/java/documentation.xml/CommentRequired">
    <properties>
      <property name="fieldCommentRequirement" value="Ignored" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml">
    <exclude name="MethodArgumentCouldBeFinal" />
    <exclude name="ShortVariable" />
    <exclude name="LongVariable" />
    <exclude name="CommentDefaultAccessModifier" />
    <exclude name="DefaultPackage" />
    <exclude name="CallSuperInConstructor" />
    <exclude name="AbstractNaming" />
    <exclude name="UselessParentheses" />
    <exclude name="AtLeastOneConstructor" />
    <!-- <exclude name="GenericsNaming" /> -->
    <exclude name="OnlyOneReturn" />
    <!-- Allow builders to have setters that return something -->
    <exclude name="LinguisticNaming" />
  </rule>
  <rule ref="category/java/design.xml">
    <exclude name="TooManyMethods" />
    <exclude name="LawOfDemeter" />
    <exclude name="LoosePackageCoupling" />
    <!-- Allow builders to be big -->
    <exclude name="ExcessiveClassLength" />
    <exclude name="ExcessivePublicCount" />
    <exclude name="GodClass" />
  </rule>
  <rule ref="category/java/documentation.xml">
    <exclude name="CommentSize" />
  </rule>
  <rule ref="category/java/errorprone.xml">
    <exclude name="BeanMembersShouldSerialize" />
    <!-- This results in overflow during analysis and so is disabled. This rule is known to be poor with Java 5 and later:
      https://github.com/pmd/pmd/issues/873 -->
    <exclude name="DataflowAnomalyAnalysis" />
    <!-- Assigning objects to null to reset the state is allowed. -->
    <exclude name="NullAssignment" />
  </rule>
  <rule ref="category/java/multithreading.xml">
    <exclude name="DoNotUseThreads" />
    <exclude name="AvoidUsingVolatile" />
  </rule>
  <rule ref="category/java/performance.xml">
    <!-- This is used for 16-bit images so allow it.  -->
    <exclude name="AvoidUsingShortType" />
  </rule>

</ruleset>
